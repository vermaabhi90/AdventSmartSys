@model SmartSys.BL.ProViews.SalesBacklogViewModel

@{
    ViewBag.Title = "GetSalesBacklogList";
}
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    Sales Backlog View List
</div>
<div style="position:relative">
    @(Html.EJ().Grid<SmartSys.BL.SysDBCon.SysDBConModel>("GrdBacklogList")
                        .Datasource((IEnumerable<object>)@Model.BacklogList)
        .AllowFiltering()

        .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.ExcelExport);
        }))
        .AllowPaging()
        .AllowSorting()
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
                .PageSettings(p => { p.PageSize(20); })
        .EnableAltRow(true)
        .ContextMenuSettings(contextMenu =>
        {
            contextMenu.EnableContextMenu();
            contextMenu.DisableDefaultItems();
            contextMenu.CustomContextMenuItems(c =>
            {
                c.AddItem("View_1", "Put On Hold By Account");
                c.AddItem("View_2", "Put On Hold By CSR");
                c.AddItem("View_3", "Put On Hold By Purchaser");
                c.AddItem("View_4", "Release");
            });
        })
          .Columns(col =>
          {

              col.Field("Company").HeaderText("Company Name").TextAlign(TextAlign.Center).Width(60).Add();
              col.Field("DocumentNo").HeaderText("Document No").IsPrimaryKey(true).TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
              col.Field("ItemNo").HeaderText("Item No").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("LineNo").HeaderText("Line No").Visible(false).TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("SalespersonCode").HeaderText("Salesperson Code").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("Status").HeaderText("Status").TextAlign(TextAlign.Left).Width(80).Visible(false).Add();
              col.Field("Full_Name").HeaderText("Sales Person").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("BillToName").HeaderText("Customer Name").TextAlign(TextAlign.Left).Width(200).Add();
              col.Field("CustomerOrderNo_").HeaderText("CustomerOrderNo_").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("Cust_PO_Date").HeaderText("Customer PO Date").Format("{0:MM/dd/yyyy}").Width(120).Add();
              col.Field("Posting_Date").HeaderText("Posting Date").Format("{0:MM/dd/yyyy}").Width(120).Add();
              col.Field("CRD").HeaderText("CRD (Customer Require Date)").Format("{0:MM/dd/yyyy}").Width(120).Add();
              col.Field("VPD").HeaderText("VPD (Vendor Promise Date)").Format("{0:MM/dd/yyyy}").Width(120).Add();
              col.Field("VendorPartNo").HeaderText("Vendor Part No").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("Make").HeaderText("Make").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("UnitPrice").HeaderText("Unit Price").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("Quantity").HeaderText("Quantity").Format("{00000}").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("LineAmount").HeaderText("LineAmount").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("OutstandingQuantity").HeaderText("Outstanding Quantity").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("OutstandingAmount").HeaderText("Outstanding Amount").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("Item_Qty_On_Hand").HeaderText("Item: Current Qty. On Hand").TextAlign(TextAlign.Left).Width(80).Add();
              col.Field("Qty_On_PO").HeaderText("Qty On PO").TextAlign(TextAlign.Left).Width(80).Add();



          })
                 .ClientSideEvents(eve =>
                 {

                     eve.ContextClick("contextclick");
                     eve.QueryCellInfo("querycellinfo");
                     eve.ActionComplete("complete");
                     eve.RecordDoubleClick("RecordDoubleClick");

                 })
    )
</div>
@Html.EJ().Dialog("modalFichaEquipo").Width(1000).Height(300).EnableModal(true).ShowOnInit(false).Title("Sales Backlog Comments").EnableResize(true)
<script type="text/javascript">
    function contextclick(args) {
            if (args.text == "Put On Hold By Account") {
                var grid = $("#GrdBacklogList").ejGrid("instance");
                var result = this.getSelectedRecords();
                var Company = result[0]["Company"];
                var DocumentNo = result[0]["DocumentNo"];
                var LineNo = result[0]["LineNo"];
                var Status = 35;
                var path = '@Url.Content("~/ProViews/AddBacklogComments")' + "?Company=" + Company + "&DocumentNo=" + DocumentNo + "&LineNo=" + LineNo + "&Status=" + Status
                $("#BacklogDetail").ejDialog({

                    contentUrl: path,
                    contentType: "ajax"
                });
                $("#BacklogDetail").ejDialog("open");
        }
        else
            if (args.text == "Put On Hold By CSR") {
                var grid = $("#GrdBacklogList").ejGrid("instance");
                var result = this.getSelectedRecords();
                var Company = result[0]["Company"];
                var DocumentNo = result[0]["DocumentNo"];
                var LineNo = result[0]["LineNo"];
                var Status = 36;
                var path = '@Url.Content("~/ProViews/AddBacklogComments")' + "?Company=" + Company + "&DocumentNo=" + DocumentNo + "&LineNo=" + LineNo + "&Status=" + Status
                $("#BacklogDetail").ejDialog({

                    contentUrl: path,
                    contentType: "ajax"
                });
                $("#BacklogDetail").ejDialog("open");

            }
            else
                if (args.text == "Put On Hold By Purchaser") {
                    var grid = $("#GrdBacklogList").ejGrid("instance");
                    var result = this.getSelectedRecords();
                    var Company = result[0]["Company"];
                    var DocumentNo = result[0]["DocumentNo"];
                    var LineNo = result[0]["LineNo"];
                    var Status = 37;
                    var path = '@Url.Content("~/ProViews/AddBacklogComments")' + "?Company=" + Company + "&DocumentNo=" + DocumentNo + "&LineNo=" + LineNo + "&Status=" + Status
                    $("#BacklogDetail").ejDialog({

                        contentUrl: path,
                        contentType: "ajax"
                    });
                    $("#BacklogDetail").ejDialog("open");
                }
                else
                    if (args.text == "Release") {
                        var grid = $("#GrdBacklogList").ejGrid("instance");
                        var result = this.getSelectedRecords();
                        var Company = result[0]["Company"];
                        var DocumentNo = result[0]["DocumentNo"];
                        var LineNo = result[0]["LineNo"];
                        var Status = 37;
                        var path = '@Url.Content("~/ProViews/AddBacklogComments")' + "?Company=" + Company + "&DocumentNo=" + DocumentNo + "&LineNo=" + LineNo + "&Status=" + Status
                        $("#BacklogDetail").ejDialog({

                            contentUrl: path,
                            contentType: "ajax"
                        });
                        $("#BacklogDetail").ejDialog("open");
                    }
    }
</script>
<script>
    function querycellinfo(args) {
        if (args.column.field == "Status" && args.data.Status == 35)
            $($(args.cell).parent()).css("backgroundColor", "red");/*custom css applied to the row */
        if (args.column.field == "Status" && args.data.Status == 36)
            $($(args.cell).parent()).css("backgroundColor", "orange");/*custom css applied to the row */
        if (args.column.field == "Status" && args.data.Status == 37)
            $($(args.cell).parent()).css("backgroundColor", "blue");/*custom css applied to the row */
    }

</script>
<script type="text/javascript">
    function RecordDoubleClick(args) {
        var rec = args.data;
        var DocumentNo = args.row.children().eq(1).text();

            var url = '@(Url.Action("GetCommentPartial", "ProViews"))' + DocumentNo;
            url = url.replace("&amp;", "&");
            var dialogObj = $("#modalFichaEquipo").ejDialog({
                contentType: "ajax",
                contentUrl: url
            });

            var tag = $("<div></div>");
            var path = '@Url.Action("GetBacklogsComments")' ;
            $.ajax({
                type: 'POST',
                url: path, // we are calling json method
                dataType: 'json',
                data: { DocumentNo: DocumentNo },
                success: function (lst) {

                    var path1 = '@Url.Action("GetCommentPartial")'
                    var dialogObj = $("#modalFichaEquipo").ejDialog({
                        contentUrl: path1,
                        contentType: "ajax"
                    })
                },
                error: function (ex) {
                }
            });

        return false;
    }
</script>
@{
    Html.EJ()
        .Dialog("BacklogDetail")
        .Title("<a id='Title'>Details</a>")
        .Width(900)
        .Height(500)
        .ShowOnInit(false)
        .ContentTemplate(@<p></p>)
            .Render();
}

<script>
    function openDialog() {
        $("#BacklogDetail").ejDialog("open");
    }
    function openNestedDialog() {
        $("#BacklogDetail").ejDialog("open");
    }
</script>