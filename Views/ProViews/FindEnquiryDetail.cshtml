@model SmartSys.BL.Enquiry.EnquiryModel

@{
    ViewBag.Title = "FindEnquiryDetail";
}
@if (Model.Types == "Quot")
{
<div class="page-header glyphicon glyphicon-list  text-info">
    Find Information to Quotation
</div>
}
else
{
    <div class="page-header glyphicon glyphicon-list  text-info">
        Find Information to Enquiry
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {        
        $("#Customerdrp").change(function () {
            var Type = $("#Type").val();
            var Customerdrp = $("#Customerdrp").val();
            var path = "/ProViews/GetFindData"
            $.ajax({
                type: 'POST',
                url: path,
                dataType: 'json',
                data: { Type: Type, CustomerId: Customerdrp },
                success: function (Result) {
                    if(Type=="Quot")
                    {
                        var obj = $("#grdQuotList").ejGrid("instance")
                        obj.dataSource(Result);
                        $('#QuotGrid').show();                       
                    }
                    else {                        
                        var obj = $("#grdEnquiryList").ejGrid("instance")
                        obj.dataSource(Result);
                        $('#EnqGrid').show();                       
                    }
                    
                }
            });
            return false;
        })
    });
</script>
<table>
    <tr>
        <td>
            <label>Customer</label>
        </td>
        <td>
            <div class="navbar-text">
                @Html.HiddenFor(model => model.Types,new { id= "Type" })
                @Html.HiddenFor(model => model.Dep, new { id = "Dep" })
                @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.LstCust, "--- Please Select Customer ---", new { @class = " drp form-control", style = "width:300px", id = "Customerdrp" })
            </div>
        </td>
    </tr>
</table>

@if (Model.Types == "Quot")
{
    <div style="position:relative" id="QuotGrid">
        @(Html.EJ().Grid<SmartSys.BL.Enquiry.QoutFollowupModel>("grdQuotList")
                .Datasource((IEnumerable<object>)ViewBag.QuotLst)
        .AllowFiltering()
        .AllowPaging()
        .AllowSorting()
        .AllowScrolling()
                .PageSettings(p => { p.PageSize(20); })
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()

        .EnableAltRow(true)                
                  .ContextMenuSettings(contextMenu =>
                  {
                      contextMenu.EnableContextMenu();
                      contextMenu.DisableDefaultItems();
                      contextMenu.CustomContextMenuItems(c =>
                      {
                          c.AddItem("Select1", "Select");
                          
                      });

                  })
                  .ClientSideEvents(eve => { eve.ContextOpen("contextopen"); })
                .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
        .Columns(col =>
        {
            col.Field("EnqId").HeaderText("Enq Id").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("QuotationId").HeaderText("Quot Id").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("QuotationNumber").HeaderText("Quot Number").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(150).Add();
            col.Field("CompCode").HeaderText("Company").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(80).Add();
            col.Field("CustomerName").HeaderText("Customer Name").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("SalesPersonName").HeaderText("Sales Person").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("Term").HeaderText("Term").TextAlign(TextAlign.Left).Width(120).Add();
            col.Field("QuotCost").HeaderText("Quotation Value").Format("{0:N4}").TextAlign(TextAlign.Left).Width(120).Add();
            col.Field("Currency").HeaderText("Currency").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(70).Add();
            col.Field("CreatedBy").AllowEditing(false).TextAlign(TextAlign.Left).HeaderText("Created By").Width(150).Add();
            col.Field("CreatedDatestr").AllowEditing(false).TextAlign(TextAlign.Left).HeaderText("Created Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
        })
        )
    </div>
}
else
{
    <div style="position:relative" id="EnqGrid">
        @(Html.EJ().Grid<SmartSys.BL.Enquiry.EnquiryModel>("grdEnquiryList")
        .Datasource((IEnumerable<object>)ViewBag.EnqList)
        .AllowFiltering()
        .AllowPaging()
        .AllowSorting()
                .PageSettings(p => { p.PageSize(20); })
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
       
        .EnableAltRow(true)                  
                  .ClientSideEvents(eve => { eve.ContextOpen("contextopenEnq"); })
                .ClientSideEvents(eve => { eve.RecordDoubleClick("contextclickEnq"); })
        .Columns(col =>
        {
            col.Field("EnqId").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("EnqNumber").HeaderText("Enq Number").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(100).Add();
            col.Field("ModifiedBy").HeaderText("Enq Date").TextAlign(TextAlign.Left).Width(150).Add();
            col.Field("CustomerName").HeaderText("Customer Name").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("SalesPerson").HeaderText("Sales Person").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("CompCode").HeaderText("Company").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("StatusStr").HeaderText("Status").TextAlign(TextAlign.Left).Width(100).Add();
            col.Field("Status").HeaderText("Status").Visible(false).TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(100).Add();
            col.Field("Priority").HeaderText("Priority").TextAlign(TextAlign.Center).Width(100).Add();
            col.Field("ContactName").HeaderText("Contact Name").TextAlign(TextAlign.Left).Width(170).Add();
            col.Field("Remark").HeaderText("Remark").TextAlign(TextAlign.Left).Width(170).Add();           
        })
        )
    </div>
}
<script>
    $(document).ready(function () {
        $("#QuotGrid").hide();
        $("#EnqGrid").hide();
    });
</script>
<script>
    function contextclickEnq(args) {       
            var grid = $("#grdEnquiryList").ejGrid("instance");
            var result = this.getSelectedRecords();
            var EnqId = result[0]["EnqId"];
            var Dep = $("#Dep").val();           
            if(Dep.toString() =='Sales')
            {
                var path = '@Url.Content("~/ProViews/CustomerEnquiryTrackingForSales")' + "?EnqId=" + EnqId
                window.open(path);
            }
            else
            {
                var path = '@Url.Content("~/ProViews/CustomerEnquiryTracking")' + "?EnqId=" + EnqId
                window.open(path);
            }
        }    
    function contextclick(args) {

        if (args.text == "Select") {
            var grid = $("#grdQuotList").ejGrid("instance");
            var result = this.getSelectedRecords();
            var EnqId = result[0]["EnqId"];
            var path = '@Url.Content("~/ProViews/CustomerEnquiryTrackingForSales")' + "?EnqId=" + EnqId
            window.open(path);
        }
    }
</script>
@Html.EJ().ScriptManager()