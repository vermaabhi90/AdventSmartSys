@model IEnumerable<SmartSys.BL.DHFeedModel>
@using Syncfusion.JavaScript.Models
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    DH Feed List
</div>
<div style="margin-bottom:8px;margin-top:5px">
    @Html.ActionLink(" Create", "CreateFeed", new { iFeedID = 0 }, new { @class = "btn-xs btn-info glyphicon glyphicon-leaf buttonCss" })
</div>
    <div style="position:relative">
        @(Html.EJ().Grid<SmartSys.BL.DHFeedModel>("grdDHFeedList")
                .Datasource((IEnumerable<object>)@Model)
        .AllowFiltering()
        .AllowPaging()
        .PageSettings(p => { p.PageSize(20); })
        .AllowSorting()
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
     .PageSettings(p => { p.PageSize(20); })
        .EnableAltRow(true)
          //.ContextMenuSettings(contextMenu =>
          //{
          //    contextMenu.EnableContextMenu()
          //   .ContextMenuItems(Item => Item.AddTool(ContextMenuItems.AddRecord))

          //      .CustomContextMenuItems(new List<CustomContexMenuItems>() { new CustomContexMenuItems() { Id = "Edit1", Text = "Edit" } });
          //})
          .ContextMenuSettings(contextMenu =>
          {
              contextMenu.EnableContextMenu();
              contextMenu.DisableDefaultItems();
              contextMenu.CustomContextMenuItems(c =>
              {
                  c.AddItem("Add_Record", "Add Record");
                  c.AddItem("Edit1", "Edit Record");
              });

          })
        //.EnablePersistence(true)
        .Columns(col =>
        {
            col.Field("FeedID").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("FeedName").HeaderText("Feed Name").ValidationRules(v => v.AddRule("required", true)).Width(250).Add();
            col.Field("Description").HeaderText("Description").ValidationRules(v => v.AddRule("required", true)).Width(140).Add();
            col.Field("FeedType").HeaderText("Feed Type").TextAlign(TextAlign.Left).Width(180).Add();
            col.Field("FeedTypeCode").HeaderText("FeedType Code").TextAlign(TextAlign.Left).Width(180).Add();
            col.Field("ModifiedByName").HeaderText("Modified By").Width(180).Add();
            col.Field("ModifyDate").HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).TextAlign(TextAlign.Center).Add();
            col.HeaderText("Edit").IsUnbound(true).TextAlign(TextAlign.Center).Width(90).AllowFiltering(false).Template("#BtnTemplate").Add();
        })
                   .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
        )
    </div>
    <script id="BtnTemplate" type="text/x-jsrender">
        <a class="btn-xs btn-info  glyphicon glyphicon-pencil" href="/DhFeed/CreateFeed?iFeedID={{:FeedID}} "> </a>
    </script>
    <script>
    function contextclick(args) {
        if (args.text == "Add Record") {
            var path = '@Url.Content("~/DhFeed/CreateFeed")' + "?iFeedID=" + 0
            event.preventDefault();
            window.location.replace(path);
        }
        else
            if (args.text == "Edit Record") {
                var tempData = args.text;
                var grid = $("#grdDHFeedList").ejGrid("instance");
                var result = this.getSelectedRecords();
                var FeedID = result[0]["FeedID"];
                var path = '@Url.Content("~/DhFeed/CreateFeed")' + "?iFeedID=" + FeedID
                event.preventDefault();
                window.location.replace(path);

            }

    }

    </script>
