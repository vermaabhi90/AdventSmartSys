@model SmartSys.BL.Tmleave.ProjectCategoryModel

@{
    ViewBag.Title = "Project Category List";
}
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    TM Project Category List
</div>
    <div style="margin-bottom:8px;margin-top:5px">
    @Html.ActionLink(" Create", "CreateProjectCategory", new { ProCateId = 0 }, new { @class = "btn-xs btn-info glyphicon glyphicon-leaf buttonCss" })
</div>
        <div style="position:relative">
            @(Html.EJ().Grid<SmartSys.BL.Tmleave.ProjectCategoryModel>("grdTMProjectCategory")
                .Datasource((IEnumerable<object>)@Model.ProjCateList)
        .AllowFiltering()
        .AllowPaging()
        .AllowSorting()
        .EnableHeaderHover()
                .PageSettings(p => { p.PageSize(20); })
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
          .PageSettings(p => { p.PageSize(20); })
        .EnableAltRow(true)
         //.ContextMenuSettings(contextMenu =>
         //    {
         //        contextMenu.EnableContextMenu()
         //        .ContextMenuItems(Item => Item.AddTool(ContextMenuItems.AddRecord))
         //        .CustomContextMenuItems(new List<string> { "Edit " });
         //    })
         .ContextMenuSettings(contextMenu =>
         {
             contextMenu.EnableContextMenu();
             contextMenu.DisableDefaultItems();
             contextMenu.CustomContextMenuItems(c =>
             {
                 c.AddItem("Add_Record", "Add Record");
                 c.AddItem("Edit1", "Edit Record");
             });

         })
        .Columns(col =>
        {
            col.Field("ProjCategoryId").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("CategoryName").HeaderText("Name").TextAlign(TextAlign.Center).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("CreatedBy").AllowEditing(false).HeaderText("Created By").Width(200).Add();
            col.Field("CreatedDate").AllowEditing(false).HeaderText("Created Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.Field("ModifiedBy").AllowEditing(false).HeaderText("Modified By").Width(200).Add();
            col.Field("ModifiedDate").AllowEditing(false).HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.HeaderText("Edit").Commands(command =>
            {
                command.Type(UnboundType.Edit)

                       .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                       {
                           CssClass = "EditBtn",
                           Text = "Edit",
                           ContentType = ContentType.ImageTextImage,
                           PrefixIcon = "e-edit",
                           Height = "22px",
                           Size = ButtonSize.Mini
                       }).Add();

            })
            .AllowFiltering(false)
            .TemplateID("#BtnEdit")
            .IsUnbound(true)
            .TextAlign(TextAlign.Left)
            .Width(60)
            .Add();

        })
                  .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
            )
        </div>
        <script id="BtnEdit" type="text/x-jsrender">
            <a class="btn-xs btn-info  glyphicon glyphicon-pencil black" href="/TMLeave/CreateProjectCategory?ProCateId={{:ProjCategoryId}}"></a>
        </script>
        <script>
            function contextclick(args) {
                if (args.text == "Add Record") {
                    var path = '@Url.Content("~/TMLeave/CreateProjectCategory")' + "?ProCateId=" + 0
                    event.preventDefault();
                    window.location.replace(path);
                }
                else
                    if (args.text == "Edit Record") {
                        var tempData = args.text;
                        var grid = $("#grdTMProjectCategory").ejGrid("instance");
                        var result = this.getSelectedRecords();
                        var ProjCategoryId = result[0]["ProjCategoryId"];
                        var path = '@Url.Content("~/TMLeave/CreateProjectCategory")' + "?ProCateId=" + ProjCategoryId
                        event.preventDefault();
                        window.location.replace(path);
                    }
            }

        </script>
