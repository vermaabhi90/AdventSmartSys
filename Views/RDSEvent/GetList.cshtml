@model IEnumerable<SmartSys.BL.RDS.RDSEventModel>

@{
    ViewBag.Title = "GetEventList";
}

<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    RDS Event List
</div>
    <div style="margin-bottom:8px;margin-top:5px">
    @Html.ActionLink(" Create", "Create", null, new { @class = "btn-xs btn-info glyphicon glyphicon-leaf " })
</div>
        <div style="position:relative">
            @(Html.EJ().Grid<SmartSys.BL.SysDBCon.SysDBConModel>("grdRDSEngine")
                .Datasource((IEnumerable<object>)@Model)
        .AllowFiltering()
        .AllowPaging()
        .AllowSorting()
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
        .PageSettings(p => { p.PageSize(20); })
        .EnableAltRow(true)
               .ContextMenuSettings(contextMenu =>
               {
                   contextMenu.EnableContextMenu();
                   contextMenu.DisableDefaultItems();
                   contextMenu.CustomContextMenuItems(c =>
                   {
                       c.AddItem("Add_Record", "Add Record");
                       c.AddItem("Edit_Report", "Edit Record");
                   });

               })
        //.ShowColumnChooser()
        //.EditSettings(edit => { edit.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.Dialog); })
        //.ToolbarSettings(toolbar =>
        //    {
        //        toolbar.ShowToolbar().ToolbarItems(items =>
        //        {
        //            items.AddTool(ToolBarItems.Add);
        //            items.AddTool(ToolBarItems.Edit);
        //            items.AddTool(ToolBarItems.Update);
        //            items.AddTool(ToolBarItems.Cancel);
        //        });
        //    })
        .Columns(col =>
        {
            col.Field("EventId").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("EventName").HeaderText("Name").TextAlign(TextAlign.Center).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("Description").HeaderText("Description").TextAlign(TextAlign.Center).Width(200).Add();
            col.Field("CreatedByName").AllowEditing(false).HeaderText("Created By").Width(200).Add();
            col.Field("CreatedDate").AllowEditing(false).HeaderText("Created Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.Field("ModifiedByName").AllowEditing(false).HeaderText("Modified By").Width(200).Add();
            col.Field("ModifiedDate").AllowEditing(false).HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.HeaderText("Edit").Commands(command =>
            {
                command.Type(UnboundType.Edit)

                       .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                       {
                           CssClass = "EditBtn",
                           Text = "Edit",
                           ContentType = ContentType.ImageTextImage,
                           PrefixIcon = "e-edit",
                           Height = "22px",
                           Size = ButtonSize.Mini
                       }).Add();

            })
            .AllowFiltering(false)
            .TemplateID("#BtnEdit")
            .IsUnbound(true)
            .TextAlign(TextAlign.Left)
            .Width(60)
            .Add();

        })
          .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })

            )
        </div>
        <script id="BtnEdit" type="text/x-jsrender">
            <a class="btn-xs btn-info  glyphicon glyphicon-pencil black" href="/RDSEvent/Edit?EventId={{:EventId}}"></a>
        </script>
<script>
        function contextclick(args) {
            if (args.text == "Add Record") {

                var path = '@Url.Content("~/RDSEvent/Create")' 
                event.preventDefault();
                window.location.replace(path);
            }
            if (args.text == "Edit Record") {
                var tempData = args.text;
                var grid = $("#grdRDSEngine").ejGrid("instance");
                var result = this.getSelectedRecords();
                var EventId = result[0]["EventId"];

                var path = '@Url.Content("~/RDSEvent/Edit")' + "?EventId=" + EventId 
                event.preventDefault();
                window.location.replace(path);
            }
        }
</script>