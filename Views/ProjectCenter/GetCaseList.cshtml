@model IEnumerable<SmartSys.BL.Project.TaskDetails>


@using Syncfusion.JavaScript.Models
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    Case List
</div>

@{

    Html.EJ()
        .Dialog("seconddialog")
        .Title("<a id='Title'></a>")
        .Width(800)
        .Height(400)
        .ShowOnInit(false)
        .ContentTemplate(@<p></p>)
            .Render();
}
<script>
        function openDialog() {
            $("#seconddialog").ejDialog("open");
        }
        function openNestedDialog() {
            $("#seconddialog").ejDialog("open");
        }
</script>
<table>
    <tr>
        <td>
            <div class="btn" aria-label="...">
                <button type="button" class="" style="background-color:gray ;height:20px ;width:60px"></button> 
            </div>
        </td>
        <td>
            <b style="color:red">Assigned By Me</b>
        </td>
   
        <td>
            <div class="btn" aria-label="...">
                <button type="button" class="" style="background-color:Thistle ;height:20px ;width:60px"></button> 
            </div>
        </td>
        <td>
            <b style="color:red">Assigned To Me</b>
        </td>
    </tr>
</table>

<br />

<div style="position:relative">
    @(Html.EJ().Grid<SmartSys.BL.Project.TaskDetails>("GrdRiskCase")
                .Datasource((IEnumerable<object>)@Model)
        .AllowFiltering()
        .AllowPaging()
        .PageSettings(p => { p.PageSize(20); })
        .AllowSorting()
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
         .PageSettings(p => { p.PageSize(20); })
     //.ContextMenuSettings(contextMenu =>
     //{
     //    contextMenu.EnableContextMenu()
     //    .ContextMenuItems(Item => Item.AddTool(ContextMenuItems.Save))

     //    //.CustomContextMenuItems(new List<string> { "Quick Track" })
     //      .CustomContextMenuItems(new List<CustomContexMenuItems>() { new CustomContexMenuItems() { Id = "Edit1", Text = "Quick Track" } });
     //})
     .ContextMenuSettings(contextMenu =>
     {
         contextMenu.EnableContextMenu();
         contextMenu.DisableDefaultItems();
         contextMenu.CustomContextMenuItems(c =>
         {
             c.AddItem("Quick_Track", "Quick Track");
             
         });

     })
        //.EnablePersistence(true)
        .Columns(col =>
        {

            col.Field("TaskID").Visible(true).AllowEditing(false).HeaderText("TaskId").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(130).Add();
            col.Field("TaskName").HeaderText("Task Name").Width(140).ValidationRules(v => v.AddRule("required", true).AddRule("minlength", 3)).Add();
            col.Field("ProjectId").HeaderText("ProjectId").Visible(false).Width(140).ValidationRules(v => v.AddRule("required", true).AddRule("minlength", 3)).Add();
            col.Field("Resources").HeaderText("Resources").Width(140).ValidationRules(v => v.AddRule("required", true).AddRule("minlength", 3)).Add();
            col.Field("ProjectName").HeaderText("Project Name").Width(140).ValidationRules(v => v.AddRule("required", true).AddRule("minlength", 3)).Add();
            col.Field("StartDate").HeaderText("Start Date").Format("{0:MM/dd/yyyy}").Width(120).Add();
            col.Field("AssignedByMe").Visible(false).AllowEditing(false).HeaderText("TaskId").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(130).Add();
            col.Field("AssignedTome").Visible(false).AllowEditing(false).HeaderText("TaskId").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(130).Add();
            col.Field("ApprovedBy").Visible(true).AllowEditing(false).HeaderText("ApprovedBy").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(130).Add();
            col.Field("ApprovedDate").HeaderText("ApprovedDate").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.Field("ReviewedBy").Visible(true).AllowEditing(false).HeaderText("ReviewedBy").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(130).Add();
            col.Field("ReviewedDate").HeaderText("ReviewedDate").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.Field("EndDate").HeaderText("End Date").Width(100).Format("{0:MM/dd/yyyy }").Add();
            col.Field("Status").HeaderText("Status").Width(100).Add();
            col.Field("ModifiedByName").HeaderText("Modified By").Width(150).Add();
            col.Field("ModifiedDate").HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();

        })
                 .ClientSideEvents(eve => { eve.ContextClick("contextclick");
                     eve.QueryCellInfo("querycellinfo");
                 })
    )
</div>

<script>
function querycellinfo(args) {
    if (args.column.field == "AssignedByMe" && args.data.AssignedByMe == "AssignedByMe")
        $($(args.cell).parent()).css("backgroundColor", "gray");/*custom css applied to the row */
    if (args.column.field == "AssignedTome" && args.data.AssignedTome == "AssignedToMe")
        $($(args.cell).parent()).css("backgroundColor", "Thistle");/*custom css applied to the row */
}

</script>
<script>
    function contextclick(args) {


        if (args.text == "Quick Track") {
            var tempData = args.text;
            var grid = $("#GrdRiskCase").ejGrid("instance");
            var result = this.getSelectedRecords();
            var projectId = result[0]["ProjectId"];
            var TaskName = result[0]["TaskName"];
            $("#Title").val(TaskName);
            document.getElementById("Title").innerHTML = TaskName;
            var TaskId = result[0]["TaskID"];
            var path1 = '@Url.Action("casetimeline", "quickview")' + "?TaskID=" + TaskId + "&ProjectId=" + projectId;
            $("#seconddialog").ejDialog({
                contentUrl: path1,
                contentType: "ajax"
            });
            $("#seconddialog").ejDialog("open");
        }
    }
</script>