@model SmartSys.BL.Project.ProjectExpensesModel

@{
    ViewBag.Title = "ApproveRejectExpenses";
}
  <div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-pencil  text-info">
    Project Expenses Approve Reject
</div>

@{

    var gridParticipantDetail = new WebGrid(source: Model.LstExpDoc, canSort: true, canPage: true, rowsPerPage: 10, ajaxUpdateContainerId: "gridBankDetail");
}

<style type="text/css">
    .modal-content {
        width: 1000px !important;
        margin: 30px auto !important;
        left: 50%;
        transform: translateX(-50%);
    }

    .webgrid {
        margin: 4px;
        border-collapse: collapse;
        width: 99%;
        background-color: #B4CFC3;
    }

    .webgrid-header {
        background-color: #C1D4E6;
        font-weight: bold;
        color: #fff;
    }

    .webgrid th, .webgrid td {
        border: 1px solid #C0C0C0;
        padding: 5px;
        align-content: center;
    }

    .webgrid th {
        color: #1E90FF;
    }

    .webgrid-alt {
        background-color: #E4E9F5;
        color: #000;
    }

    .gridhead a:hover {
        text-decoration: underline;
    }

    .webgrid-description {
        width: auto;
    }

    .webgrid-select {
        background-color: #71857C;
    }
</style>
<script>
    $(document).ready(function () {
        $('.save').click(function (e) {

            var ManagerRemark = $('#ManagerRemark').val();

            if (ManagerRemark.toString() == "") {
                alert("Please Enter Manager Remark ");
                return false;
            }
            
            $("#frmAddress").unbind('submit').submit(); S
        });
    });
</script>
<style>
    td {
        padding-right: 15px;
    }
</style>
@using (Html.BeginForm("ApproveRejectExpenses", "ProjectCenter", FormMethod.Post, new { Id = "frmAddress" }))
{
    <table  style="border-collapse:separate;border-spacing: 0 5px;">

        <tr>
            <td>
                <label for="ItemName">Project:</label>
            </td>
            <td>
                <div class="">
                    @Html.HiddenFor(model => model.ExpenseId)
                    @Html.TextBoxFor(model => model.ProjectName, new { required = "required", id = "Amount", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ProjectId)
                </div>
            </td>

            <td>
                <label for="ItemName">Task:</label>
            </td>
            <td>
                <div class="">
                    @Html.TextBoxFor(model => model.TaskName, new { required = "required", id = "Amount", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.TaskName)
                </div>
            </td>
            <td>
                <label for="Amount">Amount:</label>
            </td>
            <td>
                <div class="">
                    @Html.TextBoxFor(model => model.Amount, new { required = "required", id = "Amount", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Amount)
                </div>
            </td>
        </tr>

        <tr>

            <td>
                <label for="Remark">Remark:</label>
            </td>
            <td>
                <div class="">
                    @Html.TextBoxFor(model => model.Remark, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Remark)
                </div>
            </td>
            <td>
                <label for="ItemName">Expense Type:</label>
            </td>
            <td>
                <div class="">

                    @Html.DropDownList("ExpTypeId", (IEnumerable<SelectListItem>)ViewBag.ExpnsType, "--- Please Select Expense Type ---", new { style = "width:250px", id = "ExpenseType", @class = "form-control", @disabled = "" })
                    @Html.ValidationMessageFor(model => model.ProjectId)
                </div>
            </td>

            <td>
                <label for="ItemName">CreatedBy:</label>
            </td>
            <td>
                <div class="">
                    @Html.TextBoxFor(model => model.CreatedBy, new { required = "required", @readonly = "readonly", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CreatedBy)
                </div>

        </tr>
        <tr>
            <td>
                <label for="ItemName">CreatedDate:</label>
            </td>
            <td>
                <div class="">
                    @Html.TextBoxFor(model => model.CreatedDate, new { required = "required", @readonly = "readonly", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CreatedDate)
                </div>
            </td>

            <td>
                <label for="ItemName">ModifiedBy:</label>
            </td>
            <td>
                <div class="">
                    @Html.TextBoxFor(model => model.ModifiedBy, new { required = "required", @readonly = "readonly", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ModifiedBy)
                </div>
            </td>
            <td>
                <label for="ItemName">ModifiedBy:</label>
            </td>
            <td>
                <div class="">
                    @Html.TextBoxFor(model => model.ModifiedDate, new { required = "required", @readonly = "readonly", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ModifiedDate)
                </div>
            </td>
        </tr>

    </table>
    <br>
    <table>
        <tr>
            <td>
                @if (Model.LstExpDoc.Count > 0)
                {
                    @(Html.EJ().Grid<SmartSys.BL.Project.ProjectExpensesModel>("grdAttachmntList")
                        .Datasource(Model.LstExpDoc)
                        .AllowPaging()
                        .AllowSorting()
                        .EnableHeaderHover()
                        .AllowResizing()
                        .AllowScrolling()
                        .PageSettings(p => { p.PageSize(20); })
                        .EnableAltRow(true)
                        .Columns(col =>
                        {
                            col.Field("ExpenseId").HeaderText("Expense Id").TextAlign(TextAlign.Center).Width(60).Add();
                            col.Field("DocumentPath").HeaderText("Document Path").TextAlign(TextAlign.Center).Width(60).Add();
                            col.Field("Description").HeaderText("Description").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
                            col.HeaderText("Open").Template("#OpenAttachmnt").TextAlign(TextAlign.Center).AllowFiltering(false).Width(50).Add();

                        }).ClientSideEvents(eve =>
                        {
                            eve.ActionComplete("complete");
                            eve.ContextClick("complete");
                        })
                    )
                   
                }
                else
                {
                    <div class="alert alert-info" role="alert">
                        <label>Sorry! There is No Information about Participants Details !!!</label>
                    </div>
                }
            </td>
        </tr>
    </table>

    <table style="border-collapse:separate;border-spacing: 0 5px;">
        <tr>
            <td>
                <label>Approve / Reject: </label>
            </td>
            <td>
                <div class="">
                    <select id="Decision" name="Decision" , class="form-control">
                        <option value="Approve">Approve</option>
                        <option value="Reject">Reject</option>
                    </select>
                </div>

            </td>

            <td>
                <label>Manager Remark: </label>
            </td>
            <td>
                <div class="">
                    @Html.TextBoxFor(model => model.ManagerRemark, new { id = "ManagerRemark", required = "required", @class = "form-control" })
                </div>
            </td>
        </tr>
        <tr>

            <td>
                    <button type="submit" class="btn-xs buttonCss btn-info glyphicon glyphicon-save save"> Save</button>
            </td>
        </tr>

    </table>

}
@Html.EJ().ScriptManager()

<script id="OpenAttachmnt" type="text/x-jsrender">
    <a class="btn-xs btn-info  glyphicon glyphicon-download" href="/ProjectCenter/DownloadExpenses?ExpenseId=@Model.ExpenseId&amp;Filename={{:DocumentPath}}">  Open</a>
</script>