@model IEnumerable<SmartSys.BL.SystemRoles>
@using Syncfusion.JavaScript.Models
@{
    ViewBag.Title = "SytemRoleList";
}
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
   System Role List
</div>
<div style="margin-bottom:8px;margin-top:5px">
    @Html.ActionLink(" Create", "ManageRole", new { iRoleID =0}, new { @class = "btn-xs btn-info glyphicon glyphicon-leaf " })
</div>
    <div style="position:relative">
        @(Html.EJ().Grid<SmartSys.BL.SystemRoles>("grdRoleList")
                .Datasource((IEnumerable<object>)@Model)
        .AllowFiltering()
        .AllowPaging()
        .PageSettings(p => { p.PageSize(20); })
        .AllowSorting()
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
        .PageSettings(p => { p.PageSize(20); })
        .EnableAltRow(true)
              //                 .ContextMenuSettings(contextMenu =>
              //                 {
              //                     contextMenu.EnableContextMenu()
              //                    .ContextMenuItems(Item => Item.AddTool(ContextMenuItems.AddRecord))

              //             //.CustomContextMenuItems(new List<string> { "Edit ","Assign Report" ,"Assign Feed"})
              //              .CustomContextMenuItems(new List<CustomContexMenuItems>() { new CustomContexMenuItems() { Id = "Edit1", Text = "Edit" } })
              //;

              //                 })

              .ContextMenuSettings(contextMenu =>
              {
                  contextMenu.EnableContextMenu();
                  contextMenu.DisableDefaultItems();
                  contextMenu.CustomContextMenuItems(c =>
                  {
                      c.AddItem("Add_Record", "Add Record");
                      c.AddItem("Edit1", "Edit Record");
                      c.AddItem("Assign_Report", "Assign Report");
                      c.AddItem("Assign_Feed", "Assign Feed");
                  });

              })

        //.EnablePersistence(true)
        .Columns(col =>
        {
            col.Field("RoleID").HeaderText("ID").IsPrimaryKey(true).Visible(false).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("RoleName").HeaderText("Role Name").ValidationRules(v => v.AddRule("required", true)).Width(150).Add();

            col.HeaderText("Edit").Commands(command =>
            {
                command.Type(UnboundType.Edit)

                       .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                       {
                           CssClass = "EditBtn",
                           Text = "Edit",
                           Click = "onClick",
                           ContentType = ContentType.ImageTextImage,
                           PrefixIcon = "e-edit",
                           Height = "22px",
                           Size = ButtonSize.Mini
                       }).Add();

            }).TemplateID("#edit")

            .IsUnbound(true)
            .TextAlign(TextAlign.Left)
            .AllowFiltering(false)
            .Width(90)
            .Add();

            col.HeaderText("Assign Report").Commands(command =>
            {
                command.Type(UnboundType.Edit)

                       .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                       {
                           CssClass = "EditBtn",
                           Text = "Edit",
                           Click = "RoleReport",
                           ContentType = ContentType.ImageTextImage,
                           PrefixIcon = "e-edit",
                           Height = "22px",
                           Size = ButtonSize.Mini
                       }).Add();

            }).TemplateID("#Role")

          .IsUnbound(true)
          .TextAlign(TextAlign.Left)
          .AllowFiltering(false)
          .Width(90)
          .Add();
            col.HeaderText("Assign Feed").Commands(command =>
            {
                command.Type(UnboundType.Edit)

                       .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                       {
                           CssClass = "EditBtn",
                           Text = "Edit",
                           Click = "onClick",
                           ContentType = ContentType.ImageTextImage,
                           PrefixIcon = "e-edit",
                           Height = "22px",
                           Size = ButtonSize.Mini
                       }).Add();

            }).TemplateID("#Feed")

       .IsUnbound(true)
       .TextAlign(TextAlign.Left)
       .AllowFiltering(false)
       .Width(90)
       .Add();
        })
                    .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
        )
    </div>
    <script id="edit" type="text/x-jsrender">
        <a class="btn-xs btn-info  glyphicon glyphicon-pencil" href="/Admin/ManageRole?iRoleID={{:RoleID}}"> </a>
    </script>
    <script id="Role" type="text/x-jsrender">
        <a class="btn-xs btn-info  glyphicon glyphicon-pencil" href="/Admin/RoleReportMapping?strRoleID={{:RoleID}}"> </a>
    </script>
    <script id="Feed" type="text/x-jsrender">
        <a class="btn-xs btn-info  glyphicon glyphicon-pencil" href="/Admin/RoleFeedMapping?strRoleID={{:RoleID}}"> </a>
    </script>
    <script type="text/javascript">
    function onClick(args) {
        var grid = $("#grdRoleList").ejGrid("instance");
        var index = this.element.closest("tr").index();
        var record = grid.getCurrentViewData()[index];
        var ConId = record["RoleID"];
        var path = '@Url.Content("~/Admin/CreateRole")' + "?iRoleID=" + ConId
        event.preventDefault();
        window.location.replace(path);
    }
    function RoleReport(args) {
        var grid = $("#grdRoleList").ejGrid("instance");
        var index = this.element.closest("tr").index();
        var record = grid.getCurrentViewData()[index];
        var ConId = record["RoleID"];
        var path = '@Url.Content("~/Admin/RoleReportMapping")' + "?strRoleID=" + ConId
        event.preventDefault();
        window.location.replace(path);
    }
    </script>
    <script>
    function contextclick(args) {

        if (args.text == "Add Record") {
            var path = '@Url.Content("~/Admin/ManageRole")' + "?iRoleID=" + 0
            event.preventDefault();
            window.location.replace(path);
        }
        else
            if (args.text == "Edit Record") {
                var tempData = args.text;
                var grid = $("#grdRoleList").ejGrid("instance");
                var result = this.getSelectedRecords();
                var RoleID = result[0]["RoleID"];
                var path = '@Url.Content("~/Admin/ManageRole")' + "?iRoleID=" + RoleID
                event.preventDefault();
                window.location.replace(path);
            }
        if (args.text == "Assign Feed") {
            var tempData = args.text;
            var grid = $("#grdRoleList").ejGrid("instance");
            var result = this.getSelectedRecords();
            var RoleID = result[0]["RoleID"];
            var path = '@Url.Content("~/Admin/RoleFeedMapping")' + "?strRoleID=" + RoleID
            event.preventDefault();
            window.location.replace(path);
        }
            else
                if (args.text == "Assign Report") {
                    var tempData = args.text;
                    var grid = $("#grdRoleList").ejGrid("instance");
                    var result = this.getSelectedRecords();
                    var RoleID = result[0]["RoleID"];
                    var path = '@Url.Content("~/Admin/RoleReportMapping")' + "?strRoleID=" + RoleID
                    event.preventDefault();
                    window.location.replace(path);

                }
    }

    </script>
