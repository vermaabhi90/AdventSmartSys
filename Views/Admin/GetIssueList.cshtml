@model IEnumerable<SmartSys.BL.IssueModel>
@using Syncfusion.JavaScript.Models
<script>
    $(document).keypress(function (e) {
        if (e.which == 13) {         
            var IssueId = $('#inputSearch').val();
            if (IssueId != "")
            {
                var path = '@Url.Content("~/Admin/CreateIssue")' + "?IssueId=" + IssueId + "&tabIndex=0"
                event.preventDefault();
                window.location.replace(path);
            }
            e.preventDefault();
            // Do something         
        }
    });
</script>

<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    Issue Details List
</div>
    <table>
        <tr>
            <td>
                @Html.ActionLink("  Create", "CreateIssue", new { IssueId = 0, tabIndex = 0 }, new { @class = "btn-xs btn-info glyphicon glyphicon-leaf " })
            </td>
            <td>
                <div class="navbar-text">
                    <input type="text" name="search" id="inputSearch" class="form-control" placeholder="Enter IssueId">
                </div>
              
            </td>
        </tr>
    </table>

    <style>
        input[type=text] {
            width: 180px;
            box-sizing: border-box;
            border: 2px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
            background-color: white;
            background-image: url('searchicon.png');
            background-position: 10px 10px;
            background-repeat: no-repeat;
            padding: 12px 20px 12px 40px;
            -webkit-transition: width 0.4s ease-in-out;
            transition: width 0.4s ease-in-out;
        }

            input[type=text]:focus {
                width: 99%;
            }
    </style>

    @(Html.EJ().Grid<SmartSys.BL.IssueModel>("GrdIssueDetail")
                .Datasource((IEnumerable<object>)@Model)
                      .AllowFiltering()
                      .AllowPaging()
                      .PageSettings(p => { p.PageSize(20); })
                      .AllowSorting()
                      .EnableHeaderHover()
                      .AllowResizing()
                      .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
                      .AllowScrolling()
                        .PageSettings(p => { p.PageSize(20); })
                      .EnableAltRow(true)

              .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.ExcelExport);
                }))
             .Mappers(map => map.ExportToExcelAction(@Url.Action("ExportIssueList")))
             .ContextMenuSettings(contextMenu =>
             {
                 contextMenu.EnableContextMenu();
                 contextMenu.DisableDefaultItems();
                 contextMenu.CustomContextMenuItems(c =>
                 {
                   
                     c.AddItem("View_Detail12", "View Detail");
                 });

             })

            .EnablePersistence(true)
        .Columns(col =>
        {
            col.Field("IssueId").HeaderText("Issue Id").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("Title").HeaderText("Title").ValidationRules(v => v.AddRule("required", true)).Width(120).Add();
            col.Field("Status").HeaderText("Status").TextAlign(TextAlign.Center).Width(100).Add();
            col.Field("CreatedBy").HeaderText("CreatedBy").TextAlign(TextAlign.Center).Width(200).Add();
            col.Field("CreatedDate").HeaderText("CreatedDate").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.Field("ModifiedBy").HeaderText("ModifiedBy").TextAlign(TextAlign.Center).Width(200).Add();
            col.Field("ModifiedDate").HeaderText("ModifiedDate").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.HeaderText("Edit")
            .Template("#edit")
            .IsUnbound(true)
            .AllowFiltering(false)
            .TextAlign(TextAlign.Center)
            .Width(90)
            .Add();

        })
                   .ClientSideEvents(eve =>
                   {
                       eve.ContextClick("contextclick");
                       //eve.QueryCellInfo("querycellinfo");
                   })
    )


<script id="edit" type="text/x-jsrender">
    {{if Status =='Closed' || Status =='Complete'|| Status =='Cancelled' }}

    {{else}}
    <a class="btn-xs btn-info  glyphicon glyphicon-pencil" href="/Admin/CreateIssue?IssueId={{:IssueId}}&amp;tabIndex=0"></a>
    {{/if}}
</script>

<script>
    function contextclick(args) {

        if (args.text == "View Detail") {
            var tempData = args.text;
            var grid = $("#GrdIssueDetail").ejGrid("instance");
            var result = this.getSelectedRecords();
            var IssueId = result[0]["IssueId"];
            var Risk = "Risk";
            var path = '@Url.Content("~/Admin/CreateIssue")' + "?IssueId=" + IssueId + "&tabIndex=" + 0
            event.preventDefault();
            window.location.replace(path);

        }


        if (args.text == "Add Record") {
            var tempData = args.text;
            var grid = $("#GrdIssueDetail").ejGrid("instance");
            var result = this.getSelectedRecords();
            var path = '@Url.Content("~/Admin/CreateIssue")' + "?IssueId=" + 0 + "&tabIndex=" + 0
            event.preventDefault();
            window.location.replace(path);

        }
    }

    function querycellinfo(args) {
        if (args.column.field == "Status" && args.data.Status == 'NEW')
            $($(args.cell).parent()).css("backgroundColor", "blue");/*custom css applied to the row */
        if (args.column.field == "Status" && args.data.Status == 'Complete')
            $($(args.cell).parent()).css("backgroundColor", "gray");/*custom css applied to the row */

    }
</script>
