@model SmartSys.BL.Departmentmodel

@{
    ViewBag.Title = "EditDepartment";
}
<style>
    td {
        padding-right: 15px;
    }
</style>
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-pencil  text-info">
    Edit Department Details
</div>
<script>
    $(document).ready(function () {
        $('.save').click(function (e) {

            var DeptName = $('#DeptName').val();


            if (DeptName.toString() == "") {
                alert("Please Enter Department Name ");
                return false;
            }

            $("#Form1").unbind('submit').submit(); 
        });
    });

</script>
@using (Html.BeginForm(new { id = "Form1" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <html>

    <body>

        <table class="spacing-table" style="border-collapse:separate;border-spacing: 0 5px;">
            <tr>
                <td>
                    <label for="DeptId">Department Id</label>
                </td>
                <td>
                    <div class="">
                        @Html.TextBoxFor(model => model.DeptId, new { id = "DeptId", @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.DeptId)
                    </div>
                </td>
                <td></td>
            </tr>
            <tr>
                <td>
                    <label for="DeptName">Department Name</label>
                </td>
                <td>
                    <div class="">
                        @Html.TextBoxFor(model => model.DeptName, new { @class = "form-control", id = "DeptName" })
                        @Html.ValidationMessageFor(model => model.DeptName)
                    </div>
                </td>
                <td></td>

                <td>
                    <label for="DeptHead">Department Head</label>
                </td>

                <td>
                    <div class="">
                        @Html.DropDownList("DeptHeadId", (IEnumerable<SelectListItem>)ViewBag.DepartmentHead, new { @class = "form-control", style = "width:250px" })
                    </div>

                </td>
                <td></td>
            </tr>
            <tr>
                <td>
                    <label for="CreatedBy">Created By</label>
                </td>

                <td>
                    <div class="">
                        @Html.TextBoxFor(model => model.CreatedByName, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.CreatedByName)
                    </div>
                </td>
                <td></td>

                <td>
                    <label for="CreatedDate">Created Date</label>
                </td>

                <td>
                    <div class="">
                        @Html.TextBoxFor(model => model.CreatedDate, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.CreatedDate)
                    </div>
                </td>
                <td></td>
            </tr>
            <tr>
                <td>
                    <label for="ModifiedBy">Modified By</label>
                </td>

                <td>
                    <div class="">
                        @Html.TextBoxFor(model => model.ModifiedByName, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.ModifiedByName)
                    </div>
                </td>
                <td></td>

                <td>
                    <label for="ModifiedDate">Modified Date</label>
                </td>

                <td>
                    <div class="">
                        @Html.TextBoxFor(model => model.ModifiedDate, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.ModifiedDate)
                    </div>
                </td>


        </table>
        <table>
            <tr>
                <td>
                    <button style="margin:10px" class="btn-xs btn-info glyphicon glyphicon-hand-left" type="button" onclick="location.href = 'GetDepartmentList';" );"> Back</button>
                    <button type="submit" class="btn-xs  btn-info glyphicon glyphicon-save save"> Save</button>                   
                </td>

                <td>
                    <button type="button" id="btnSave" class="btn-xs  btn-info glyphicon glyphicon-save" style="" onclick="window.location.reload();">Save Task</button>

                </td>
            </tr>
        </table>
    </body>
</html>
}

@{Html.EJ().Tab("defaultTabs").Items(data =>
    {
    data.Add().ID("DepartmentTask").Text("Department Task").ContentTemplate(
        @<div>
             <div class="" style="margin-left:200px">
                 @{
                     List<string> icon = new List<string>() { "close", "collapsible", "maximize", "minimize", "pin" };}


                 @Html.EJ().TreeView("tree").ShowCheckbox(true).ClientSideEvents(e => e.NodeCheck("onCheck")).TreeViewFields(s => s.Datasource((IEnumerable<SmartSys.BL.SysRoleTasks>)ViewBag.datasource).Id("id").ParentId("pid").Text("name").HasChild("hasChild").Expanded("expanded"))


             </div>
        </div>);
    })
      .Render();}

<script type="text/javascript">
    $(document).ready(function (e) {

        $('#btnSave').one('click', function (evt) {
            var treeobj,data,source;
            var JSON1 = [];


            //var treeObj = $("#tree").ejTreeView('instance');
            treeobj = $("#tree").data("ejTreeView");
            var checkednodes = treeobj.getCheckedNodes();
            var array = @Html.Raw(Json.Encode(

((IEnumerable<SmartSys.BL.SysRoleTasks>)ViewBag.datasource).Select(node => new

{
     pid = node.pid,
    name = node.name,
    hasChild =node.HasChild,
    id = node.id,
    IsChecked = node.IsChecked
})
))
           for( data=0 ; data<checkednodes.length ; data++)
            {
               for(source=0;source<array.length;source++){
                   if(checkednodes[data].id == array[source].id){
                       JSON1.push(array[source]);
                   }
               }
           }
            var dataToSend = JSON.stringify(JSON1);
          
            var currentRequest = null;

            currentRequest = $.ajax({

                url: '/Admin/SaveDepartmentTasks',

                //contentType: 'application/json',
                type: 'POST',
                data: {"str":dataToSend,"DeptId":$("#DeptId").val() },
                dataType: 'json',

                beforeSend : function()    {
                    if(currentRequest != null) {
                        currentRequest.abort();
                    }
                },
                //dataType: 'json'
            }).




           success(function (result) {
               console.log(result);

           }).

           error(function (xhr, status) {
               console.log(status);
               alert("saved Successfully....");

           })



        });
    });

</script>

<script type="text/javascript">

    $(document).ready(function (e) {

        $('#Show').one('click', function (evt) {
            $("#treediv").show();
            $("#btnSave").show();
            $("#Show").show();
            var treeobj,data,source;
            var JSON1 = [];
            var treeObj = $("#tree").ejTreeView('instance');
            var index, len;
            var a =  @Html.Raw(Json.Encode(@ViewBag.ids));
            for (index = 0, len = a.length; index < len; ++index) {

                treeObj.checkNode(a[index]);
            }
        })

    })
</script>

<script type="text/javascript">
    $(window).load(function(){
        var index, len;
        var a =  @Html.Raw(Json.Encode(@ViewBag.ids));
        for (index = 0, len = a.length; index < len; ++index) {
            var tree = $("#tree").ejTreeView('instance');
            tree.checkNode(a[index]);
        }
    })
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
