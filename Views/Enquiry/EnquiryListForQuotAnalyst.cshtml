
@{
    ViewBag.Title = "EnquiryListForQuotAnalyst";
}
@model SmartSys.BL.Enquiry.EnquiryModel

<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
     Enquiry List
</div>
<br>
<div style="position:relative">
    @(Html.EJ().Grid<SmartSys.BL.Enquiry.EnquiryModel>("grdDWEnquiry")
                 .Datasource(ds =>

         ds.URL("/Enquiry/DataForQuotAnalyst").Offline(true))
        .AllowFiltering()
        .AllowPaging()
        .AllowSorting()
                .PageSettings(p => { p.PageSize(20); })
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
        .EnableAltRow(true)
         .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
         {
             items.AddTool(ToolBarItems.ExcelExport);
             items.AddTool(ToolBarItems.Search);
         }))
           .Mappers(map =>
           {
               map.ExportToExcelAction("EnquiryQuotAnalystExport");

           })
                  .ContextMenuSettings(contextMenu =>
                  {
                      contextMenu.EnableContextMenu();
                      contextMenu.DisableDefaultItems();
                      contextMenu.CustomContextMenuItems(c =>
                      {
                          c.AddItem("View_Detail", "View Detail");
                      });

                  })
                  .ClientSideEvents(eve => { eve.ContextOpen("contextopen"); })
                .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
        .Columns(col =>
        {
            col.Field("EnqId").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            //   col.Field("EnqNumber").HeaderText("Enq Number").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(50).Add();
            col.Field("EnqDate").HeaderText("Enq Date").Format("{0:MM/dd/yyyy  HH:MM}").TextAlign(TextAlign.Left).Width(150).Add();
            col.Field("CustomerName").HeaderText("Customer Name").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("SalesPerson").HeaderText("Sales Person").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(100).Add();
            col.Field("CompCode").HeaderText("Company").TextAlign(TextAlign.Left).Width(80).Add();
            col.Field("StatusStr").HeaderText("Status").TextAlign(TextAlign.Left).Width(100).Add();
            col.Field("Status").HeaderText("Status").Visible(false).TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(100).Add();
            col.Field("Priority").HeaderText("Priority").TextAlign(TextAlign.Center).Width(100).Add();
            col.Field("QuotaionCost").HeaderText("Quot Cost").TextAlign(TextAlign.Right).Width(100).Add();
            col.HeaderText("Analysis Percent").Template("#columnTemplate").TextAlign(TextAlign.Center).Width(100).Add();
            col.Field("Description").HeaderText("Percent Status").TextAlign(TextAlign.Left).Width(100).Add();
            col.Field("ContactName").HeaderText(" Cust Contact Name").TextAlign(TextAlign.Left).Width(140).Add();
            col.Field("ModifiedBy").AllowEditing(false).TextAlign(TextAlign.Left).HeaderText("Modified By").Width(150).Add();
            col.Field("ModifiedDate").AllowEditing(false).TextAlign(TextAlign.Left).HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(120).Add();
            
            col.HeaderText("Edit").Commands(command =>
            {
                command.Type(UnboundType.Edit)

                       .ButtonOptions(new Syncfusion.JavaScript.Models.ButtonProperties()
                       {
                           CssClass = "EditBtn",
                           Text = "Edit",
                           ContentType = ContentType.ImageTextImage,
                           PrefixIcon = "e-edit",
                           Height = "22px",
                           Size = ButtonSize.Mini
                       }).Add();

            })
            .AllowFiltering(false)
            .Template("#BtnEdit")

            .TextAlign(TextAlign.Left)
            .Width(60)
            .Add();

        })
    )
</div>
<script id="BtnEdit" type="text/x-jsrender">
    <a class="btn-xs btn-info  glyphicon glyphicon-pencil black" href="/Enquiry/QuotAnalystDetailList?EnqId={{:EnqId}}"></a>
</script>
<script type="text/x-jsrender" id="columnTemplate">
    {{if PercentComplete > 0}}
    <div class="progress" style="background-color:lightgray;margin-bottom:2px">
        <div class="progress-bar progress-bar-success progress-bar-striped active" role="progressbar"
             aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width:{{:PercentComplete}}%">
            <span class="" style="color:black">{{:PercentComplete}}%</span>
        </div>
    </div>
    {{else}}

    <div class="progress" style="background-color:lightgray;margin-bottom:2px">
        <div class="progress-bar progress-bar-danger  progress-bar-striped active" role="progressbar"
             aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width:100%">
            <span class="">{{:PercentComplete}}%</span>
        </div>
    </div>
    {{/if}}
</script>
<script>
    function contextclick(args) {
       
         if (args.text == "View Detail") {
            var tempData = args.text;
            var grid = $("#grdDWEnquiry").ejGrid("instance");
            var result = this.getSelectedRecords();
            var EnqId = result[0]["EnqId"];          
            var path = '@Url.Content("~/Enquiry/QuotAnalystDetailList")' + "?EnqId=" + EnqId
            event.preventDefault();
            window.location.replace(path);
        }        
    }
</script>
<script>
    $(document).ready(function () {

        $('.RunReport').click(function (e) {

            var TxtParamValue = '@Model.TxtParamValue';
            var selTypeText = '@Model.TxtParamValue';
            var ParamId = '@Model.ParamId';
            var hidText = "";
            var ParamValue = null;
            var Parmname = null;
            var ReportId = '@Model.ReportId';

            $.ajax({
                dataType: 'json',
                type: "POST",
                url: "/AdhocReporting/ReportParam",
                //data: { ReportId: ReportId, Parmname: Parmname,ParamValue:ParamValue},
                data: { hidText: hidText, TxtParamValue: TxtParamValue, ParamId: ParamId, ReportId: ReportId },
                success: function (data) {
                    var path = '@Url.Content("~/AdhocReporting/ReportParam")' + "?ReportId=" + '@Model.ReportId' + "&Parmname=" + Parmname + "&ParamValue=" + ParamValue;
                    e.preventDefault();
                    window.location.replace(path);
                },
                error: function (msg) {
                    alert("Error " + msg.d.toString());
                }
            });
            window.location.reload();
            return false;
        });
    });
</script>


