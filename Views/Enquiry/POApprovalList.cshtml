@model SmartSys.BL.Enquiry.CustomerPOModel

@{
    ViewBag.Title = "Purchase Order List";
}
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    SO Pendding Approval List
</div>
<div style="position:relative">
    @(Html.EJ().Grid<SmartSys.BL.Enquiry.EnquiryModel>("grdDWPOList")
                .Datasource((IEnumerable<object>)@Model.POlist)
        .AllowFiltering()
        .AllowPaging()
        .AllowSorting()
        .EnableHeaderHover()
                .PageSettings(p => { p.PageSize(20); })
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
     .ToolbarSettings(toolbar => { toolbar.ShowToolbar().ToolbarItems(items => { items.AddTool(ToolBarItems.Search); }); })
        .EnableAltRow(true)
      .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.ExcelExport);
                }))
             .Mappers(map => map.ExportToExcelAction(@Url.Action("ExportPOApprovalList")))
                   .ContextMenuSettings(contextMenu =>
                   {
                       contextMenu.EnableContextMenu();
                       contextMenu.DisableDefaultItems();
                       contextMenu.CustomContextMenuItems(c =>
                       {
                           c.AddItem("View_SO", "View SO");

                       });

                   })
                  .ClientSideEvents(eve => { eve.ContextOpen("contextopen"); })
                .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
        .Columns(col =>
        {
            col.Field("PurchaseOrderId").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("PurchaseOrderNumber").HeaderText("PO Number").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("PODate").HeaderText("PO Date").Format("{0:MM/dd/yyyy  HH:MM}").TextAlign(TextAlign.Left).Width(200).Add();
            col.Field("CustomerName").HeaderText("Customer Name").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("StatusStr").HeaderText("Status").TextAlign(TextAlign.Left).Width(200).Add();
            col.Field("Status").HeaderText("Status").Visible(false).TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            //  col.Field("ExpectedDate").HeaderText("Expecte dDate").TextAlign(TextAlign.Center).Width(200).Add();

            col.Field("ModifiedBy").AllowEditing(false).TextAlign(TextAlign.Left).HeaderText("Modified By").Width(200).Add();
            col.Field("ModifiedDate").AllowEditing(false).TextAlign(TextAlign.Left).HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
        })
    )
</div>

@{

    Html.EJ()
        .Dialog("EditPO")
        .Title("<a id='Title'>PO Detail</a>")
        .Width(1000)
        .Height(700)
        .ShowOnInit(false)
        .ContentTemplate(@<p></p>)
            .Render();
}
<script>
        function openDialog() {
            $("#EditPO").ejDialog("open");
        }
        function openNestedDialog() {
            $("#EditPO").ejDialog("open");
        }
</script>
<script>
    function contextclick(args) {

        if (args.text == "View SO") {
            var tempData = args.text;
            var grid = $("#grdDWPOList").ejGrid("instance");
            var result = this.getSelectedRecords();
            var PurchaseOrderId = result[0]["PurchaseOrderId"];
            var path = '@Url.Content("~/Enquiry/POApproveReject")' + "?PurchaseOrderId=" + PurchaseOrderId
            $("#EditPO").ejDialog({

                contentUrl: path,
                contentType: "ajax"
            });
            $("#EditPO").ejDialog("open");
        }
    }
</script>


