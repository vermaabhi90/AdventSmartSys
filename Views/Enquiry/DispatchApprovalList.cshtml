@model IEnumerable<SmartSys.BL.Enquiry.DispatchModel>

@{
    ViewBag.Title = "DispatchList";
}
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    Dispatch List For Approval
</div>

<div style="position:relative">
    @(Html.EJ().Grid<SmartSys.BL.Enquiry.DispatchModel>("GrdDispatchAppproval")
                .Datasource((IEnumerable<object>)@Model)
        .AllowFiltering()
        .AllowPaging()
        .AllowScrolling()
        .PageSettings(p => { p.PageSize(20); })
        .AllowSorting()
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
     .ToolbarSettings(toolbar => { toolbar.ShowToolbar().ToolbarItems(items => { items.AddTool(ToolBarItems.Search); }); })
        .EnableAltRow(true)
       .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.ExcelExport);
                }))
             .Mappers(map => map.ExportToExcelAction(@Url.Action("ExportDispatchApprovalList")))
         .ContextMenuSettings(contextMenu =>
         {
             contextMenu.EnableContextMenu();
             contextMenu.DisableDefaultItems();
             contextMenu.CustomContextMenuItems(c =>
             {
                 c.AddItem("View_Detail", "View Detail");
             });

         })

        .Columns(col =>
        {
            col.Field("DispatchId").HeaderText("Dispatch Id").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("CompanyName").HeaderText("Company Name").ValidationRules(v => v.AddRule("required", true)).Width(150).Add();
            col.Field("CustomerName").HeaderText("Customer Name").ValidationRules(v => v.AddRule("required", true)).Width(150).Add();
            col.Field("DispatchDate").HeaderText("Dispatch Date").Format("{0:MM/dd/yyyy}").ValidationRules(v => v.AddRule("required", true)).Width(80).Add();
            col.Field("Status").HeaderText("Status").TextAlign(TextAlign.Left).Width(100).Add();
            col.Field("AirwayBillNo").HeaderText("Airway Bill No").TextAlign(TextAlign.Left).Width(100).Add();
            col.Field("Invoice_No").HeaderText("Invoice No").TextAlign(TextAlign.Left).Width(100).Add();
            col.Field("ExportPermitNo").HeaderText("Export Permit No").TextAlign(TextAlign.Left).Width(100).Add();
            col.Field("FreightForwarder").HeaderText("FreightForwarder Name").TextAlign(TextAlign.Left).Width(90).Add();
            col.Field("CreatedBy").HeaderText("Created By").TextAlign(TextAlign.Left).Width(70).Add();
            col.Field("CreatedDate").HeaderText("Created Date").Format("{0:MM/dd/yyyy}").TextAlign(TextAlign.Left).Width(70).Add();
            col.Field("ModifiedBy").HeaderText("Modified By").TextAlign(TextAlign.Left).Width(70).Add();
            col.Field("ModifiedDate").HeaderText("Modified Date").Format("{0:MM/dd/yyyy}").TextAlign(TextAlign.Left).Width(70).Add();
            col.HeaderText("View")
           .Template("#edit")
           .AllowFiltering(false)
       .IsUnbound(true)
       .TextAlign(TextAlign.Center)
       .Width(50)
       .Add();
        })
                 .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
    )
</div>

<script id="edit" type="text/x-jsrender">
    @*{{if Status == 'NEW'}}*@

    <a class="btn-xs btn-info  glyphicon glyphicon-eye-open" href="/Enquiry/ApproveRejectDispatch?DispatchId={{:DispatchId}}"></a>    
    @*{{else}}*@


    @*{{/if}}*@


</script>
<script>
    function contextclick(args) {
        if (args.text == "View Detail") {
            var tempData = args.text;
            var grid = $("#GrdDispatchAppproval").ejGrid("instance");
            var result = this.getSelectedRecords();
            var DispatchId = result[0]["DispatchId"];
            var path = '@Url.Content("~/Enquiry/ApproveRejectDispatch")' + "?DispatchId=" + DispatchId
            event.preventDefault();
            window.location.replace(path);
        }
    }
</script>