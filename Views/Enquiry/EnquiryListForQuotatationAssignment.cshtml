@model SmartSys.BL.Enquiry.EnquiryModel

@{
    ViewBag.Title = "Customer Enquiry";
}
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    Assigned Enquiry List For Quotation
</div>
<script>
    $(document).ready(function (e) {
        var str = '@(TempData["Message"])'.toString();
        if (str.toString() == "" || str == null)
        {
            return false;
        }
        else
        {
            alert('@(TempData["Message"])');
        }
    });
</script>
<div style="position:relative">
    @(Html.EJ().Grid<SmartSys.BL.Enquiry.EnquiryModel>("grdDWEnquiry")
                .Datasource((IEnumerable<object>)@Model.lstEnquiry)
        .AllowFiltering()
        .AllowPaging()
        .AllowSorting()
        .EnableHeaderHover()
                .PageSettings(p => { p.PageSize(20); })
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
        .EnableAltRow(true)
     .ToolbarSettings(toolbar => { toolbar.ShowToolbar().ToolbarItems(items => { items.AddTool(ToolBarItems.Search); }); })
           .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.ExcelExport);
                }))
             .Mappers(map => map.ExportToExcelAction(@Url.Action("ExportEnquiryListForQuotatationAssignment")))
                   .ContextMenuSettings(contextMenu =>
                   {
                       contextMenu.EnableContextMenu();
                       contextMenu.DisableDefaultItems();
                       contextMenu.CustomContextMenuItems(c =>
                       {
                           c.AddItem("Assign1", "Assign");
                           c.AddItem("Close_Enquiry", "Close Enquiry");

                       });

                   })
                  .ClientSideEvents(eve => { eve.ContextOpen("contextopen"); })
                .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
        .Columns(col =>
        {
            col.Field("EnqId").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("AssignedEmployee").HeaderText("Employee").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(120).Add();
            col.Field("EnqNumber").HeaderText("Enq Number").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("EnqDate").HeaderText("Enq Date").Format("{0:MM/dd/yyyy  HH:MM}").TextAlign(TextAlign.Left).Width(200).Add();
            col.Field("CustomerName").HeaderText("Customer Name").TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("StatusStr").HeaderText("Status").TextAlign(TextAlign.Left).Width(200).Add();
            col.Field("Status").HeaderText("Status").Visible(false).TextAlign(TextAlign.Left).ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("Priority").HeaderText("Priority").TextAlign(TextAlign.Center).Width(200).Add();
            col.Field("ModifiedBy").AllowEditing(false).TextAlign(TextAlign.Left).HeaderText("Modified By").Width(200).Add();
            col.Field("ModifiedDate").AllowEditing(false).TextAlign(TextAlign.Left).HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.HeaderText("Assign").Template("#BtnEdit").Add();
        })
    )
</div>
<script id="BtnEdit" type="text/x-jsrender">
    <a onclick="myfuncAssign({{:EnqId}})" class="btn-xs btn-warning  glyphicon glyphicon-eye-open"> Assign</a>
</script>
<script>

    function myfuncAssign(args)
    {
        var path = '@Url.Content("~/Enquiry/AssignEnquiryToCust")' + "?EnqId=" + args 
        $("#AssignDetails").ejDialog({
            contentUrl: path,
            contentType: "ajax"
        });
        $("#AssignDetails").ejDialog("open");
    }
</script>


@{

    Html.EJ()
        .Dialog("AssignDetails")
        .Title("<a id='Title1'></a>")
        .Width(1100)
        .Height(600)
        .ShowOnInit(false)
        .ContentTemplate(@<p></p>)
            .Render();
}
<script>
        function openDialog() {
            $("#AssignDetails").ejDialog("open");
        }
        function openNestedDialog() {
            $("#AssignDetails").ejDialog("open");
        }
</script>
<script>
    function contextclick(args) {
        if (args.text == "Assign") {
            var tempData = args.text;
            var grid = $("#grdDWEnquiry").ejGrid("instance");
            var result = this.getSelectedRecords();
            var EnqId = result[0]["EnqId"];
            var path = '@Url.Content("~/Enquiry/AssignEnquiryToCust")' + "?EnqId=" + EnqId 
            $("#AssignDetails").ejDialog({
                contentUrl: path,
                contentType: "ajax"
            });
            $("#AssignDetails").ejDialog("open");

        }
        else
           if (args.text == "Close Enquiry") {
               var tempData = args.text;
               var grid = $("#grdDWEnquiry").ejGrid("instance");
               var result = this.getSelectedRecords();
               var EnqId = result[0]["EnqId"];
               var Status = result[0]["Status"];
               var path = '@Url.Content("~/Enquiry/CloseEnq")' + "?EnqId=" + EnqId + "&Source=EnquiryListForQuotatationAssignment" + "&Status=" + Status
               $("#CloseEnquiry").ejDialog({
                   contentUrl: path,
                   contentType: "ajax"
               });
               $("#CloseEnquiry").ejDialog("open");

           }
    }
</script>
@{
    Html.EJ()
        .Dialog("CloseEnquiry")
        .Title("<a id='Title'>Close Enquiry</a>")
        .Width(650)
        .Height(400)
        .ShowOnInit(false)
        .ContentTemplate(@<p>Close Enquiry</p>)
            .Render();
}
<script>
        function openDialog() {
            $("#CloseEnquiry").ejDialog("open");
        }
        function openNestedDialog() {
            $("#CloseEnquiry").ejDialog("open");
        }
</script>


