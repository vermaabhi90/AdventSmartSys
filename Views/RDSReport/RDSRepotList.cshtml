
@model IEnumerable<SmartSys.BL.RDS.RDSReportModel>

@{
    ViewBag.Title = "RDSRepotList";
}
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    Select Report To Add/Remove Trigger/Event Dependency
</div>
    <div style="margin-bottom:8px;margin-top:5px">
        @Html.ActionLink(" Create", "RDSCreate", null, new { @class = "btn-xs  btn-info glyphicon glyphicon-leaf" })
       </div>
        <div style="position:relative">
            @(Html.EJ().Grid<SmartSys.BL.RDS.RDSReportModel>("grdReportList")
                .Datasource((IEnumerable<object>)@Model)
        .AllowFiltering()
        .AllowPaging()
        .PageSettings(p => { p.PageSize(20); })
        .AllowSorting()
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
         .ContextMenuSettings(contextMenu =>
               {
                   contextMenu.EnableContextMenu();
                   contextMenu.DisableDefaultItems();
                   contextMenu.CustomContextMenuItems(c =>
                   {
                       c.AddItem("Add_Record", "Add Record");
                       c.AddItem("Edit_Report", "Edit Record");
                   });

               })
        .EnableAltRow(true)
            //.EnablePersistence(true)
        .Columns(col =>
        {
            col.Field("ReportId").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(90).Add();
            col.Field("ReportName").HeaderText("Report Name").ValidationRules(v => v.AddRule("required", true)).Width(200).Add();
            col.Field("BusinessLineName").HeaderText("BusinessLine").TextAlign(TextAlign.Center).Width(100).Add();
            col.Field("ReportType").HeaderText("Report Type").TextAlign(TextAlign.Center).Width(90).Add();
            col.Field("ModifiedByName").HeaderText("Modified By").Width(200).Add();
            col.Field("ModifiedDate").HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();
            col.HeaderText("Edit").Template("#edit").IsUnbound(true).TextAlign(TextAlign.Center).Width(90).AllowFiltering(false).Add();

        })
         .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
            )
        </div>

        <script id="edit" type="text/x-jsrender">
            <a class="btn-xs btn-info  glyphicon glyphicon-pencil" href="/RDSReport/Edit?ReportId={{:ReportId}}"></a>
        </script>
<script>
    function contextclick(args) {
        if (args.text == "Add Record") {

                var path = '@Url.Content("~/RDSReport/RDSCreate")'
                event.preventDefault();
                window.location.replace(path);
            }
            if (args.text == "Edit Record") {
                var tempData = args.text;
                var grid = $("#grdReportList").ejGrid("instance");
                var result = this.getSelectedRecords();
                var ReportId = result[0]["ReportId"];

                var path = '@Url.Content("~/RDSReport/Edit")' + "?ReportId=" + ReportId
                event.preventDefault();
                window.location.replace(path);
            }
        }
</script>