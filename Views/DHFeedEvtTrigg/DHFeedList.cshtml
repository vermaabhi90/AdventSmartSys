@model IEnumerable<SmartSys.BL.DHFeedModel>

@{
    ViewBag.Title = "FeddList";
}
<div style="margin-left:30px;margin-bottom:20px" class="glyphicon glyphicon-list  text-info">
    Select Feed To Add/Remove Trigger/Event Dependency
</div>
<div style="position:relative">
    @(Html.EJ().Grid<SmartSys.BL.DHFeedModel>("grdFeedList")
                .Datasource((IEnumerable<object>)@Model)
        .AllowFiltering()
        .AllowPaging()
        .PageSettings(p => { p.PageSize(20); })
        .AllowSorting()
        .EnableHeaderHover()
        .AllowResizing()
        .FilterSettings(filter => { filter.FilterType(FilterType.Excel); })
        .AllowScrolling()
        .EnableAltRow(true)
          //.ContextMenuSettings(contextMenu =>
          //   {
          //       contextMenu.EnableContextMenu()
          //      .ContextMenuItems(Item => Item.AddTool(ContextMenuItems.EditRecord));


          //   })               
          .ContextMenuSettings(contextMenu =>
          {
              contextMenu.EnableContextMenu();
              contextMenu.DisableDefaultItems();
              contextMenu.CustomContextMenuItems(c =>
              {
                  c.AddItem("Edit_Record", "Edit Record");
              
              });

          })
        //.EnablePersistence(true)
        .Columns(col =>
        {
            col.Field("FeedID").HeaderText("ID").IsPrimaryKey(true).TextAlign(TextAlign.Center).Width(60).Add();
            col.Field("FeedName").HeaderText("Feed Name").ValidationRules(v => v.AddRule("required", true)).Width(180).Add();
            col.Field("Description").HeaderText("Description").ValidationRules(v => v.AddRule("required", true)).Width(140).Add();
            col.Field("FeedTypeCode").HeaderText("FeedType Code").TextAlign(TextAlign.Left).Width(150).Add();
            col.Field("ModifiedByName").HeaderText("Modified By").Width(180).Add();
            col.Field("ModifyDate").HeaderText("Modified Date").Format("{0:MM/dd/yyyy  HH:MM}").Width(150).Add();

            col.HeaderText("Edit")
                .Template("#edit")
                .AllowFiltering(false)
            .IsUnbound(true)
            .TextAlign(TextAlign.Center)
            .Width(90)
            .Add();
        })
                .ClientSideEvents(eve => { eve.ContextClick("contextclick"); })
    )
</div>

<script id="edit" type="text/x-jsrender">
    <a class="btn-xs btn-info  glyphicon glyphicon-pencil" href="/DHFeedEvtTrigg/Edit?FeedID={{:FeedID}}"></a>
</script>
<script>
    function contextclick(args) {

        if (args.text == "Edit Record") {
                var tempData = args.text;
                var grid = $("#grdFeedList").ejGrid("instance");
                var result = this.getSelectedRecords();
                var FeedID = result[0]["FeedID"];
                var path = '@Url.Content("~/DHFeedEvtTrigg/Edit")' + "?FeedID=" + FeedID
                event.preventDefault();
                window.location.replace(path);

            }

    }

</script>